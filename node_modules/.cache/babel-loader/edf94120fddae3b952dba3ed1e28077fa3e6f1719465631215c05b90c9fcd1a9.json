{"ast":null,"code":"var _jsxFileName = \"/Users/hugocosta/Desktop/back-office/src/Components/PieChartComponent.js\";\nimport React, { PureComponent } from 'react';\nimport { PieChart, Pie, Sector, Cell, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  name: \"Portugal\",\n  value: 500\n}, {\n  name: \"Espanha\",\n  value: 400\n}, {\n  name: \"França\",\n  value: 300\n}, {\n  name: \"Alemanha\",\n  value: 200\n}, {\n  name: \"Inglaterra\",\n  value: 100\n}, {\n  name: \"Suécia\",\n  value: 50\n}, {\n  name: \"Itália\",\n  value: 450\n}, {\n  name: \"Polónia\",\n  value: 20\n}];\nconst COLORS = [];\nfunction getRandomHexColor() {\n  const hexChars = \"0123456789ABCDEF\";\n  let hex = \"#\";\n  for (let i = 0; i < 6; i++) {\n    hex += hexChars[Math.floor(Math.random() * 16)];\n  }\n  return hex;\n}\nfor (let i = 0; i < 10; i++) {\n  COLORS.push(getRandomHexColor());\n}\nexport default class PieChartComponent extends PureComponent {\n  render() {\n    return /*#__PURE__*/_jsxDEV(PieChart, {\n      onMouseEnter: this.onPieEnter,\n      children: /*#__PURE__*/_jsxDEV(Pie, {\n        data: data,\n        cx: 120,\n        cy: 200,\n        innerRadius: 60,\n        outerRadius: 80,\n        fill: \"#8884d8\",\n        paddingAngle: 5,\n        dataKey: \"value\",\n        children: data.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n          fill: COLORS[index % COLORS.length]\n        }, `cell-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n}\nPieChartComponent.demoUrl = 'https://codesandbox.io/s/pie-chart-with-padding-angle-7ux0o';","map":{"version":3,"names":["React","PureComponent","PieChart","Pie","Sector","Cell","ResponsiveContainer","jsxDEV","_jsxDEV","data","name","value","COLORS","getRandomHexColor","hexChars","hex","i","Math","floor","random","push","PieChartComponent","render","onMouseEnter","onPieEnter","children","cx","cy","innerRadius","outerRadius","fill","paddingAngle","dataKey","map","entry","index","length","fileName","_jsxFileName","lineNumber","columnNumber","demoUrl"],"sources":["/Users/hugocosta/Desktop/back-office/src/Components/PieChartComponent.js"],"sourcesContent":["import React, { PureComponent } from 'react';\nimport { PieChart, Pie, Sector, Cell, ResponsiveContainer } from 'recharts';\n\n\nconst data = [\n    { name: \"Portugal\", value: 500 },\n    { name: \"Espanha\", value: 400 },\n    { name: \"França\", value: 300 },\n    { name: \"Alemanha\", value: 200 },\n    { name: \"Inglaterra\", value: 100 },\n    { name: \"Suécia\", value: 50 },\n    { name: \"Itália\", value: 450 },\n    { name: \"Polónia\", value: 20 },\n];\n\nconst COLORS = [];\n\n\nfunction getRandomHexColor() {\n    const hexChars = \"0123456789ABCDEF\";\n    let hex = \"#\";\n    for (let i = 0; i < 6; i++) {\n        hex += hexChars[Math.floor(Math.random() * 16)];\n    }\n    return hex;\n}\n\nfor (let i = 0; i < 10; i++) {\n    COLORS.push(getRandomHexColor());\n}\n\n\nexport default class PieChartComponent extends PureComponent {\n    static demoUrl = 'https://codesandbox.io/s/pie-chart-with-padding-angle-7ux0o';\n\n\n    render() {\n        return (\n            <PieChart onMouseEnter={this.onPieEnter}>\n                <Pie\n                    data={data}\n                    cx={120}\n                    cy={200}\n                    innerRadius={60}\n                    outerRadius={80}\n                    fill=\"#8884d8\"\n                    paddingAngle={5}\n                    dataKey=\"value\"\n                >\n                    {data.map((entry, index) => (\n                        <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                    ))}\n                </Pie>\n\n            </PieChart>\n        );\n    }\n}\n\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,aAAa,QAAQ,OAAO;AAC5C,SAASC,QAAQ,EAAEC,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAEC,mBAAmB,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5E,MAAMC,IAAI,GAAG,CACT;EAAEC,IAAI,EAAE,UAAU;EAAEC,KAAK,EAAE;AAAI,CAAC,EAChC;EAAED,IAAI,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAI,CAAC,EAC/B;EAAED,IAAI,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAI,CAAC,EAC9B;EAAED,IAAI,EAAE,UAAU;EAAEC,KAAK,EAAE;AAAI,CAAC,EAChC;EAAED,IAAI,EAAE,YAAY;EAAEC,KAAK,EAAE;AAAI,CAAC,EAClC;EAAED,IAAI,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAG,CAAC,EAC7B;EAAED,IAAI,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAI,CAAC,EAC9B;EAAED,IAAI,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAG,CAAC,CACjC;AAED,MAAMC,MAAM,GAAG,EAAE;AAGjB,SAASC,iBAAiBA,CAAA,EAAG;EACzB,MAAMC,QAAQ,GAAG,kBAAkB;EACnC,IAAIC,GAAG,GAAG,GAAG;EACb,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IACxBD,GAAG,IAAID,QAAQ,CAACG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;EACnD;EACA,OAAOJ,GAAG;AACd;AAEA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;EACzBJ,MAAM,CAACQ,IAAI,CAACP,iBAAiB,EAAE,CAAC;AACpC;AAGA,eAAe,MAAMQ,iBAAiB,SAASpB,aAAa,CAAC;EAIzDqB,MAAMA,CAAA,EAAG;IACL,oBACId,OAAA,CAACN,QAAQ;MAACqB,YAAY,EAAE,IAAI,CAACC,UAAW;MAAAC,QAAA,eACpCjB,OAAA,CAACL,GAAG;QACAM,IAAI,EAAEA,IAAK;QACXiB,EAAE,EAAE,GAAI;QACRC,EAAE,EAAE,GAAI;QACRC,WAAW,EAAE,EAAG;QAChBC,WAAW,EAAE,EAAG;QAChBC,IAAI,EAAC,SAAS;QACdC,YAAY,EAAE,CAAE;QAChBC,OAAO,EAAC,OAAO;QAAAP,QAAA,EAEdhB,IAAI,CAACwB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACnB3B,OAAA,CAACH,IAAI;UAAuByB,IAAI,EAAElB,MAAM,CAACuB,KAAK,GAAGvB,MAAM,CAACwB,MAAM;QAAE,GAApD,QAAOD,KAAM,EAAC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC7B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEC;EAEnB;AACJ;AAzBqBnB,iBAAiB,CAC3BoB,OAAO,GAAG,6DAA6D"},"metadata":{},"sourceType":"module","externalDependencies":[]}